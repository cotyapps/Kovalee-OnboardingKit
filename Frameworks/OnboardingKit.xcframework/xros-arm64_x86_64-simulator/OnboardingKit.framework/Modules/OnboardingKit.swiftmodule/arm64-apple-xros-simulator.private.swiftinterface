// swift-interface-format-version: 1.0
// swift-compiler-version: Apple Swift version 6.0.2 effective-5.10 (swiftlang-6.0.2.1.2 clang-1600.0.26.4)
// swift-module-flags: -target arm64-apple-xros1.0-simulator -enable-objc-interop -enable-library-evolution -swift-version 5 -enforce-exclusivity=checked -O -enable-bare-slash-regex -module-name OnboardingKit
// swift-module-flags-ignorable: -no-verify-emitted-module-interface
import AVFoundation
import Foundation
import OSLog
@_exported import OnboardingKit
import Swift
import SwiftUI
import UIKit
import _Concurrency
import _StringProcessing
import _SwiftConcurrencyShims
public struct CustomViewInput {
  public var viewName: Swift.String
  public var properties: SwiftUICore.Binding<[Swift.String : Swift.String]>?
  public var continueTrigger: SwiftUICore.Binding<Swift.Bool>?
}
public protocol CustomStepProtocol : SwiftUICore.View {
  var continueTrigger: SwiftUICore.Binding<Swift.Bool>? { get }
  var parameters: SwiftUICore.Binding<[Swift.String : Swift.String]>? { get }
}
extension OnboardingKit.CustomStepProtocol {
  public var continueTrigger: SwiftUICore.Binding<Swift.Bool>? {
    get
  }
  public var parameters: SwiftUICore.Binding<[Swift.String : Swift.String]>? {
    get
  }
}
@_Concurrency.MainActor @preconcurrency public struct AnyCustomStepView : OnboardingKit.CustomStepProtocol {
  @_Concurrency.MainActor @preconcurrency public var customAction: (() -> Swift.Void)?
  @_Concurrency.MainActor @preconcurrency public init<Content>(_ content: Content, customAction: (() -> Swift.Void)? = nil) where Content : OnboardingKit.CustomStepProtocol
  @_Concurrency.MainActor @preconcurrency public var body: some SwiftUICore.View {
    get
  }
  public typealias Body = @_opaqueReturnTypeOf("$s13OnboardingKit17AnyCustomStepViewV4bodyQrvp", 0) __
}

public struct Configuration {
}
extension OnboardingKit.Configuration {
  public static func loadFromFile(withName name: Swift.String) throws -> OnboardingKit.Configuration
  public static func loadFromURL(_ url: Foundation.URL) throws -> OnboardingKit.Configuration
}

public struct OnboardingEvent {
  public var name: Swift.String
  public var properties: [Swift.String : Any]?
}
extension OnboardingKit.OnboardingEvent : Swift.CustomStringConvertible {
  public var description: Swift.String {
    get
  }
}
public enum NextStepType {
  case custom(name: Swift.String, type: Swift.String)
  case other(Swift.String)
}
public struct NextStep {
  public var type: OnboardingKit.NextStepType
  public var stepPosition: Swift.Int
  public var paramsValue: [Swift.String : Swift.String]
  public var name: Swift.String {
    get
  }
}
@_Concurrency.MainActor @preconcurrency public struct OnboardingView : SwiftUICore.View {
  @_Concurrency.MainActor @preconcurrency public init(file: Swift.String, paddingTop: CoreFoundation.CGFloat = 0, startingPosition: Swift.Int = 1, paramsValues: [Swift.String : Swift.String] = [:], onStepChange: ((OnboardingKit.NextStep) -> Swift.Void)? = nil, onEventTrigger: ((OnboardingKit.OnboardingEvent) -> Swift.Void)? = nil, onDismiss: @escaping ([Swift.String : Swift.String]) -> Swift.Void, customViewProvider: ((OnboardingKit.CustomViewInput) -> OnboardingKit.AnyCustomStepView)? = nil)
  @_Concurrency.MainActor @preconcurrency public init(url: Foundation.URL, startingPosition: Swift.Int = 1, paramsValues: [Swift.String : Swift.String] = [:], onStepChange: ((OnboardingKit.NextStep) -> Swift.Void)? = nil, onEventTrigger: ((OnboardingKit.OnboardingEvent) -> Swift.Void)? = nil, onDismiss: @escaping ([Swift.String : Swift.String]) -> Swift.Void)
  @_Concurrency.MainActor @preconcurrency public init(configuration: OnboardingKit.Configuration, paddingTop: CoreFoundation.CGFloat = 0, startingPosition: Swift.Int = 1, paramsValues: [Swift.String : Swift.String] = [:], onStepChange: ((OnboardingKit.NextStep) -> Swift.Void)? = nil, onEventTrigger: ((OnboardingKit.OnboardingEvent) -> Swift.Void)? = nil, onDismiss: @escaping ([Swift.String : Swift.String]) -> Swift.Void, customViewProvider: ((OnboardingKit.CustomViewInput) -> OnboardingKit.AnyCustomStepView)? = nil)
  @_Concurrency.MainActor @preconcurrency public var body: some SwiftUICore.View {
    get
  }
  public typealias Body = @_opaqueReturnTypeOf("$s13OnboardingKit0A4ViewV4bodyQrvp", 0) __
}

extension OnboardingKit.AnyCustomStepView : Swift.Sendable {}
extension OnboardingKit.OnboardingView : Swift.Sendable {}
